##############################################################################
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

# This workflow is run in a fork of https://www.github.com/FAIR-GROUND/App.git
# It will create a release PR for the given app.
name: "Release App"

on:
  workflow_call:
    inputs:
      bump_major:
        type: boolean
        description: 'Bump major version'
        required: false
        default: false
      bump_minor:
        type: boolean
        description: 'Bump minor version'
        required: false
        default: false
      bump_patch:
        type: boolean
        description: 'Bump patch version'
        required: false
        default: false
      version:
        type: string
        description: 'Set specific version'
        required: false
    secrets:
      token:
        # Must send a token with contents: write and pull-requests: write
        type: string
        required: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: "Setup App: ${{ github.repository_owner }}"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo "ORGNAME=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "COMMITHASH=${{ github.sha }}" >> $GITHUB_ENV
          echo "FAIR_APP_ARTIFACT=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "PRODUCT_NAME=$(echo ${{ github.repository_owner }} | tr '-' ' ')" >> $GITHUB_ENV
          echo "BUNDLE_ID=app.$(echo ${{ github.repository_owner }})" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${{ secrets.token }}" >> $GITHUB_ENV

      - name: Get swift version
        run: swift --version 

      - name: Checkout
        uses: actions/checkout@v3
        with:
            token: ${{ env.GITHUB_TOKEN }}

      - name: Setup git
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'

      - name: Run fairtool
        run: swift run fairtool version

      - name: Bump release
        run: |
          # update the appfair.xcconfig with a new version
          if [ "${{ inputs.bump_major }}" = "true" ]; then
            swift run fairtool app configure --bump major 
          fi
          if [ "${{ inputs.bump_minor }}" = "true" ]; then
            swift run fairtool app configure --bump minor 
          fi
          if [ "${{ inputs.bump_patch }}" = "true" ]; then
            swift run fairtool app configure --bump patch 
          fi
          if [ "${{ inputs.version }}" != "" ]; then
            swift run fairtool app configure --version "${{ inputs.version }}" 
          fi

          swift run fairtool app configure -J > /tmp/fairv.json

          # show configuration
          cat /tmp/fairv.json | jq .

      - name: Push Release Tag
        run: |
          # extract build configuration variables from output
          APPNAME=`cat /tmp/fairv.json | jq -re '.productName'`
          APPID=`cat /tmp/fairv.json | jq -re '.bundleIdentifier'`
          TAGNAME=`cat /tmp/fairv.json | jq -re '.version'`

          # Push a semver tag to trigger a release of
          # https://github.com/Silly-Little-App/App.git
          git add appfair.xcconfig
          git commit -m "Auto-release ${TAGNAME}"
          git tag -a "${TAGNAME}" -m "Release ${TAGNAME}"
          git push --follow-tags

      - name: Create Pull Request
        run: |
          # Create a pull request for https://github.com/appfair/App.git
          # to trigger the integration and distribution
          gh pr create --repo appfair/App --title "${APPNAME} ${TAGNAME}" --body "Auto-release ${TAGNAME}"

